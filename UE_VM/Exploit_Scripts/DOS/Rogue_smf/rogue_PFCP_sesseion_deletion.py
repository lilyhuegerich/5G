from scapy.all import sendp, send, sr1, sniff, Packet, hexdump, Ether, IP, ICMP, UDP
from scapy.contrib.pfcp import *
import os
import time


class PCFP_sender:
    """
    """
    def __init__(self, source_ip="10.0.14.1", destination_ips=["10.0.17.1"]):
        self.source_ip=source_ip
        if not type(destination_ips)== list:
            self.destination_ips=[destination_ips]
        else:
            self.destination_ips=destination_ips
    
    def print_packet(self, packet):
        """
        """
    def gen_packet(self,destination_ip, seid=8):
        """
        """
        #addr=socket.gethostbyname(self.desitnation_ip)
        pkt=IP(src=self.source_ip, dst=destination_ip)/UDP(dport=8805, sport=8805)/PFCP(version=1, message_type=54,seid=seid, length=12 , seq=101)
        return pkt

    def send_packet(self):
        """
        """
        for seid in range(0,50):
            for ip in self.destination_ips:
                pkt= self.gen_packet(destination_ip=ip, seid=seid)
                print("Sending: ")  
                pkt.show()
                send(pkt)




sender=PCFP_sender()
sender.send_packet()
