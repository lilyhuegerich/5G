from scapy.all import sendp, send, sr1,srp1, sniff, Packet, hexdump, Ether, IP, ICMP, UDP 
from scapy.contrib.pfcp import *
import os
import time


class PCFP_sender:
    """
    """
    def __init__(self, source_ip="10.0.14.14", destination_ips=["10.0.17.1"]):
        self.source_ip=source_ip
        self.seq=60
        if not type(destination_ips)== list:
            self.destination_ips=[destination_ips]
        else:
            self.destination_ips=destination_ips
    def print_packet(self, packet):
        """
        """
    def gen_packet(self,t=54,destination_ip=None, seid=8):
        """
        54 deletion
        """
        if destination_ip==None:
            destination_ip=self.destination_ips[0]
        #addr=socket.gethostbyname(self.desitnation_ip)
        pkt=Ether(dst="00:00:00:00:00:00")/IP(src=self.source_ip, dst=destination_ip, ihl=5, flags="DF")/UDP(dport=8805, sport=8805)/PFCP(version=1, message_type=t,seid=seid, length=12 , seq=self.seq)
        self.seq+=1
        return pkt

    def send_packet(self):
        """
        """
        p= self.gen_packet(t=5)
        sendp(p, iface="lo")
        for seid in range(1,5):
            for ip in self.destination_ips:
                pkt= self.gen_packet(destination_ip=ip, seid=seid)
                print("Sending: ")  
                pkt.show()
                sendp(pkt, iface="lo")




sender=PCFP_sender()
sender.send_packet()
i=0
while i<1:
    i+=1
    #c=sniff(iface="lo", count=1, filter="udp and port 8805", prn=lambda x:x.show())
    
#srp1(c, iface="lo")
